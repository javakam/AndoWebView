// Top-level build file where you can add configuration options common to all sub-projects/modules.
apply from: "config.gradle"

buildscript {
    ext.kotlin_version = "1.4.31"
    repositories {
        google()
        jcenter()
        maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
        maven { url "https://maven.google.com" }
        maven { url "https://jitpack.io" }
        maven { url 'https://dl.bintray.com/novoda-oss/snapshots/' }
        maven { url "https://dl.bintray.com/javakam/AndoLibrary" }
        maven { url "https://dl.bintray.com/javakam/AndoDialog" }
        maven { url 'https://dl.bintray.com/javakam/FileOperator' }
    }
    dependencies {
        /*
        Cause: org/gradle/api/internal/java/usagecontext/LazyConfigurationUsageContext
        novoda 暂时不支持最新的 4.0
        classpath "com.android.tools.build:gradle:4.0.1"
         */
        //classpath 'com.android.tools.build:gradle:3.6.0'

        //gradle-wrapper.properties 👉 https://developer.android.com/studio/releases/gradle-plugin#updating-gradle
        classpath 'com.android.tools.build:gradle:4.1.1'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"

        classpath 'com.github.panpf.bintray-publish:bintray-publish:1.0.0'
    }
}

allprojects {
    repositories {
        google()
        jcenter()
        maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
        maven { url "https://maven.google.com" }
        maven { url "https://jitpack.io" }
        maven { url 'https://dl.bintray.com/novoda-oss/snapshots/' }
        maven { url "https://dl.bintray.com/javakam/AndoLibrary" }
        maven { url "https://dl.bintray.com/javakam/AndoDialog" }
        maven { url 'https://dl.bintray.com/javakam/FileOperator' }
    }
    tasks.withType(Javadoc).all {
        options {
            encoding "UTF-8"
            charSet 'UTF-8'
            links "http://docs.oracle.com/javase/7/docs/api"
        }
        //enabled = false
    }
    gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}